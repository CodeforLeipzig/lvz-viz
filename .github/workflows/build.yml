name: Build Fullstack App

on:
  push:
    branches: [use-experimental-web-as-default]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        node-version: [22]

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23
        ports:
          - 9200:9200
        env:
          cluster.name: policeticker
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1g -Xmx1g
          node.name: policeticker-1
          network.host: 0.0.0.0
          discovery.type: single-node
          discovery.zen.minimum_master_nodes: 1
          xpack.security.enabled: false
          xpack.monitoring.enabled: false
          xpack.ml.enabled: false
          xpack.graph.enabled: false
          xpack.watcher.enabled: false
        options: >-
          --health-cmd "curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Frontend
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: ./frontend/pnpm-lock.yaml
      - name: Install and Build
        working-directory: ./frontend
        run: |
          pnpm install
          pnpm build:prod

      # Backend
      - name: Copy frontend into backend
        run: |
          FRONTEND_DIST=frontend/dist/browser
          BACKEND_STATIC=backend/src/main/resources/static
          mkdir $BACKEND_STATIC
          cp -r $FRONTEND_DIST/* $BACKEND_STATIC

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Wait for Elasticsearch to be ready
        run: |
          echo "Waiting for Elasticsearch..."
          until curl -s http://localhost:9200 | grep -q "cluster_name"; do
            sleep 2
          done
          echo "Elasticsearch is up!"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle build
        working-directory: ./backend
        run: ./gradlew build
