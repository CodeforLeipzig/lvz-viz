plugins {
  id 'com.adarshr.test-logger' version '3.2.0'
  id 'com.avast.gradle.docker-compose' version '0.16.11'
  id 'com.github.ben-manes.versions' version '0.45.0'
  id 'com.gorylenko.gradle-git-properties' version '2.4.1'
  id 'eclipse-wtp'
  id 'idea'
  id 'io.freefair.lombok' version '6.6.2'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'jacoco'
  id 'java'
  id 'org.ec4j.editorconfig' version '0.0.3'
  id 'org.sonarqube' version '4.0.0.2929'
  id 'org.springframework.boot' version '2.2.13.RELEASE'
}

group = 'de.codefor.le'
version = '2.2.0'

defaultTasks 'build'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(11)
  }
}

springBoot {
  mainClassName = 'de.codefor.le.LvzViz'
  buildInfo()
}

bootJar {
  launchScript()
}

configurations.implementation {
  exclude group: "org.hamcrest"
}

repositories {
  mavenCentral()
}
dependencies {
  def seleniumVersion = '4.8.0'
  implementation "io.github.bonigarcia:webdrivermanager:5.3.2",
                 "com.google.guava:guava:31.1-jre",
                 "org.jsoup:jsoup:1.15.3",
                 "org.seleniumhq.selenium:selenium-api:$seleniumVersion",
                 "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion",
                 "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion",

  implementation("edu.stanford.nlp:stanford-corenlp:3.9.2") {
    // because https://app.snyk.io/vuln/SNYK-JAVA-COMGOOGLEPROTOBUF-173761
    exclude group: "com.google.protobuf", module: "protobuf-java"
    // because https://app.snyk.io/vuln/SNYK-JAVA-XALAN-31385
    exclude group: "xalan", module: "xalan"
    // because https://app.snyk.io/vuln/SNYK-JAVA-XERCES-31585
    exclude group: "xerces", module: "xercesImpl"
  }

  implementation "org.springframework.boot:spring-boot-starter-web",
                 "org.springframework.boot:spring-boot-starter-logging",
                 "org.springframework.boot:spring-boot-starter-data-elasticsearch",
                 "org.springframework.boot:spring-boot-starter-actuator"

  testImplementation("org.springframework.boot:spring-boot-starter-test") {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
}

dockerCompose {
  captureContainersOutput = false
}

editorconfig {
  includes = ['src/**', '*']
  excludes = ['**/images', '**/vendor', '*.gz', '*.log']
}

check.dependsOn editorconfigCheck

generateGitProperties {
  // see https://github.com/n0mer/gradle-git-properties/issues/35
  onlyIf {
    !source.isEmpty()
  }
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled false
  }
}

check.dependsOn jacocoTestReport

test {
  testLogging {
    exceptionFormat = 'full'
  }
  maxHeapSize = "2048m"
  useJUnitPlatform()
}

testlogger {
  showStandardStreams false
}
