buildscript {
  ext {
    springBootVersion = '1.4.7.RELEASE'
  }
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.avast.gradle:gradle-docker-compose-plugin:0.8.14"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
  }
}

plugins {
  id 'com.adarshr.test-logger' version '1.2.0'
  id "io.franzbecker.gradle-lombok" version "1.14"
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker-compose'

sourceCompatibility="1.8"
targetCompatibility="1.8"
group="de.codefor.le"
version="1.3.0-SNAPSHOT"

defaultTasks 'build'

springBoot {
  executable = true
  mainClass = 'de.codefor.le.LvzViz'
}

repositories { mavenCentral() }
dependencies {
  compile "org.jsoup:jsoup:1.11.3",
          "edu.stanford.nlp:stanford-corenlp:3.9.2"

  compile "org.springframework.boot:spring-boot-starter-web",
          "org.springframework.boot:spring-boot-starter-logging",
          "org.springframework.boot:spring-boot-starter-data-elasticsearch",
          "org.springframework.boot:spring-boot-starter-actuator"

  runtime "net.java.dev.jna:jna"

  testCompile "org.springframework.boot:spring-boot-starter-test",
              "junit:junit:4.12"
}

dockerCompose {
  captureContainersOutput = false
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled false
  }
}

check.dependsOn jacocoTestReport

test {
  testLogging {
    exceptionFormat = 'full'
  }
  maxHeapSize = "2048m"
}

testlogger {
  showStandardStreams true
}

// see http://www.rehpoehler.de/gradle/Gradle-Eclipse-WTP-Beispiel.html
eclipse {
  project {
    natures = ['org.springframework.ide.eclipse.core.springnature',   // if you use springsourcr sts
               'org.springsource.ide.eclipse.gradle.core.nature',     // gradle plugin
               'org.eclipse.jdt.core.javanature',                     // default java
               'org.eclipse.wst.common.modulecore.ModuleCoreNature',  // default
               'org.eclipse.wst.common.project.facet.core.nature']    // if you want a facetted projekt

    buildCommand 'org.springframework.ide.eclipse.core.springbuilder' // Spring STS
  }

  classpath {
    defaultOutputDir = file('build/classes')

    downloadSources = true
    downloadJavadoc = false
  }

  wtp {
    facet {
      facet name: 'jst.web', version: '3.0' // Servlet 3.0
    }
  }
}
